#!/bin/sh
#
# Support parameters (via command line or kernel parameter):
# ------------------------------------------------------------------------------
# reinit.mountsrc=<source_device>



# Enable strict shell mode
set -euo pipefail

PATH=/sbin:/bin:/usr/sbin:/usr/bin

MOUNT="/bin/mount"
UMOUNT="/bin/umount"

INIT="/sbin/init"

ROOT_RO=""
ROOT_RW=""
ROOT_RW_UPPER=""
ROOT_RW_WORK=""
rootmnt="/mnt/root"

fatal() {
  log Error occurred, dropping to sh
  /bin/sh
  exit 1
}
trap fatal ERR

log() {
  echo "OVERLAYFS: $@" > /dev/kmsg
}

run() {
  echo "EXEC:      $@" > /dev/kmsg
  "$@"
}
run $MOUNT -t proc none /proc

opt_parse() {
  # process kernel and passed in command-line parameters
  set -- $(cat /proc/cmdline) "$@"
  for arg in "$@"; do
    case "$arg" in
      reinit.mountsrc=*)
        mountsrc="${arg#reinit.mountsrc=}"
        ;;
    esac
  done

  log "reinit.mountsrc='$mountsrc'"
}
opt_parse

run $MOUNT -t tmpfs none /mnt
run mkdir -p $rootmnt /mnt/rw/

if [[ -z "$mountsrc" ]]; then
  run $MOUNT -t tmpfs none /mnt
  # do nothing, run init
else
  run $MOUNT $mountsrc /mnt/rw
fi


mkdir -p /mnt/rw/upper /mnt/rw/work
run $MOUNT -t overlay -o lowerdir='/',upperdir='/mnt/rw/upper',workdir='/mnt/rw/work' overlay $rootmnt

log "mount persistent overlay partition"
run mkdir -p $rootmnt/mnt/root-upper
run $MOUNT $mountsrc $rootmnt/mnt/root-upper
run $UMOUNT /mnt/rw

log "change root to $rootmnt"
run mkdir -p $rootmnt/mnt/root-lower
run cd $rootmnt
run pivot_root . $rootmnt/mnt/root-lower
log "new root is set, clear unused mounts"
run $UMOUNT /mnt/root-lower/mnt
run $UMOUNT /mnt/root-lower/proc
run $UMOUNT /mnt/root-lower/dev

log "execute init"
run exec $INIT
log "Error: reinit: exec /sbin/init failed"
fatal
